(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{124:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var a=n(1),r=n(9),i=(n(0),n(167)),o=(n(170),{id:"use-redux-service",title:"useReduxService",sidebar_label:"useReduxService"}),c={id:"hooks/use-redux-service",title:"useReduxService",description:"import useBaseUrl from '@docusaurus/useBaseUrl';\r",source:"@site/docs/hooks/150-use-redux-service.md",permalink:"/docs/hooks/use-redux-service",editUrl:"https://github.com/oneki/oneki.github.io/edit/source/docs/hooks/150-use-redux-service.md",sidebar_label:"useReduxService",sidebar:"someSidebar",previous:{title:"useLocalService",permalink:"/docs/hooks/use-local-service"},next:{title:"File structure",permalink:"/docs/advanced/file-structure"}},s=[{value:"Parameters",id:"parameters",children:[]},{value:"Examples",id:"examples",children:[{value:"Minimal example",id:"minimal-example",children:[]}]}],u={rightToc:s};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const service = useReduxService(serviceDefinition);\n")),Object(i.b)("p",null,"The goal of ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"useReduxService"))," is to create a singleton with two kinds of methods:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("em",{parentName:"strong"},"Reducer")," methods"),": the role of these methods is to update the redux state. These methods are generally very simple."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("em",{parentName:"strong"},"Saga")," methods"),": ",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"These methods are generally asynchronous and more complex. "),Object(i.b)("li",{parentName:"ul"},"A saga method is more like a flow. Each step of the flow can be asynchronous and can trigger a re-render"),Object(i.b)("li",{parentName:"ul"},"A saga method never updates the Redux state by itself. It always calls a ",Object(i.b)("em",{parentName:"li"},"Reducer")," method to do that.")))),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"A redux service is unique across the application (singleton) and can be reused in multiple components.")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Be sure to read the documentation of ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://redux.js.org/"}),"Redux")," and ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://redux-saga.js.org/"}),"Redux Saga")," to understand exactly how it works.",Object(i.b)("br",null),"\n",Object(i.b)("strong",{parentName:"p"},"Oneki.js")," has an opinionated approach on how to use these librairies and tries to remove most of the boilerplate, but it's important to understand how it works underneath.")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Check the ",Object(i.b)("strong",{parentName:"p"},"advanced")," section to have an in depth view of a service.")),Object(i.b)("h3",{id:"parameters"},"Parameters"),Object(i.b)("h4",{id:"inputs"},"Inputs"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"serviceDefinition: {\n\n  init: function(context) // method called just after the creation of the service.\n  name: string, // the name of the service. Must be unique\n  reducers: Reducer, // The Reducer methods\n  sagas: Sagas, // The Saga methods\n  inject: { // Inject other services into this service so it can use them.\n    myService1, // myService1 is a service imported via import myService1 from '...'\n    myService2,\n    ...\n  }\n\n}\n")),Object(i.b)("h5",{id:"reducer"},"Reducer"),Object(i.b)("p",null,"Reducer is an object where each entry represents a ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"Reducer")," method")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"Reducer: {\n  method1: function (state,    // the full redux state\n                     payload,  // the payload of the action that was dispatched\n                     context),\n  method2: function (state, \n                     payload,\n                     context),\n  ...\n}\n")),Object(i.b)("h5",{id:"saga"},"Saga"),Object(i.b)("p",null,"Saga is an object where each entry represents a ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"Saga")," method")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"Saga: {\n  method3: latest ( // Saga effect. could be: latest | every | leading. Indicate how to handle an action when another action of the same type is still in progress.\n              function* (payload, // the payload of the action that was dispatched\n                        context)), \n  method4: every (\n              function* (payload,\n                        context)), \n  ...\n}\n")),Object(i.b)("h4",{id:"outputs"},"Outputs"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// A singleton service that has all reducer and saga methods defined in the serviceDefinition\n// The signature of these methods is the same whether they are Reducer or Saga.\nservice: {\n\n  method1: function (payload),\n  method2: function (payload),\n  method3: function (payload),\n  method4: function (payload),\n  ...\n\n}\n")),Object(i.b)("h2",{id:"examples"},"Examples"),Object(i.b)("h3",{id:"minimal-example"},"Minimal example"),Object(i.b)("p",null,"A redux service is not created inside a component as it's a singleton available across the whole app.\nThis example contains two files:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"One file to define the service"),Object(i.b)("li",{parentName:"ul"},"A second file to show how a component can use this service")),Object(i.b)("h5",{id:"definition-of-the-service"},"Definition of the service"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'import { latest } from "onekijs";\nimport { call, delay } from "redux-saga/effects";\n\n// NotificationService is a very simple Redux service\n// It updates the entry "notification" in the redux state and removes based on the TTL of the notification\nexport const notificationService = {\n  name: "simpleNotification",\n  reducers: {\n    add: function(state, notification) {\n        state.simpleNotification = notification\n    },\n    remove: function(state) {\n      state.simpleNotification = null;\n    }\n  },\n  sagas: {\n    send: latest(function* (notification) {\n        // set the notification in the Redux state\n        console.log("ici", notification);\n        yield call(this.add, notification);\n        \n        // wait the number of ms indicated in TTL\n        yield delay(notification.ttl);\n\n        // remove the notification from the Redux state\n        yield this.remove(notification.id);\n    })\n  }\n};\n')),Object(i.b)("h5",{id:"component-that-uses-this-service"},"Component that uses this service"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'import { useReduxService, useStoreProp } from "onekijs";\nimport React from "react";\nimport { notificationService } from "./NotificationService";\n\nlet uid = 0;\nexport default () => {\n  // inject the notificationService.\n  const service = useReduxService(notificationService);\n\n  // useStoreProp is a hook that selects a single entry in the Redux state\n  const notification = useStoreProp("simpleNotification");\n\n  return (\n    <div>\n      <button\n        onClick={() => service.send({ \n          id: `notif-${++uid})`,\n          message: `This is a notification ! with id ${uid}`,\n          ttl: 3000\n        })}\n      >create notification</button>\n\n      {notification && (\n        <div>Notification: {notification.message} - TTL: {notification.ttl} ms</div>\n      )}\n    </div>\n  );\n};\n')))}l.isMDXComponent=!0},167:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),l=function(e){var t=r.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},d=function(e){var t=l(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),b=a,m=d["".concat(o,".").concat(b)]||d[b]||p[b]||i;return n?r.a.createElement(m,c({ref:t},u,{components:n})):r.a.createElement(m,c({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var u=2;u<i;u++)o[u]=n[u];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},168:function(e,t,n){"use strict";var a=n(0),r=n(48);t.a=function(){return Object(a.useContext)(r.a)}},170:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));n(175);var a=n(168);function r(e){var t=(Object(a.a)().siteConfig||{}).baseUrl,n=void 0===t?"/":t;if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?n+e.slice(1):n+e}},173:function(e,t,n){var a=n(66),r=n(23);e.exports=function(e,t,n){if(a(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(r(e))}},174:function(e,t,n){var a=n(2)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[a]=!1,!"/./"[e](t)}catch(r){}}return!0}},175:function(e,t,n){"use strict";var a=n(17),r=n(34),i=n(173),o="".startsWith;a(a.P+a.F*n(174)("startsWith"),"String",{startsWith:function(e){var t=i(this,e,"startsWith"),n=r(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),a=String(e);return o?o.call(t,a,n):t.slice(n,n+a.length)===a}})}}]);