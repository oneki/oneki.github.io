(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{139:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(1),a=n(9),i=(n(0),n(167)),o=(n(170),{id:"use-redux-service",title:"useReduxService",sidebar_label:"useReduxService"}),c={id:"hooks/use-redux-service",title:"useReduxService",description:"import useBaseUrl from '@docusaurus/useBaseUrl';\r",source:"@site/docs/hooks/150-use-service.md",permalink:"/docs/hooks/use-redux-service",editUrl:"https://github.com/oneki/oneki.github.io/edit/source/docs/hooks/150-use-service.md",sidebar_label:"useReduxService",sidebar:"someSidebar",previous:{title:"useLocalService",permalink:"/docs/hooks/use-local-service"},next:{title:"File structure",permalink:"/docs/advanced/file-structure"}},s=[{value:"Parameters",id:"parameters",children:[]},{value:"Examples",id:"examples",children:[{value:"Minimal example",id:"minimal-example",children:[]}]}],u={rightToc:s};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"const service = useService(serviceDefinition);\n")),Object(i.b)("p",null,"The goal of ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"useService"))," is to create a singleton with two kinds of methods:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("em",{parentName:"strong"},"Reducer")," methods"),": the role of these methods is to update the redux state. These methods are generally very simple."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("em",{parentName:"strong"},"Saga")," methods"),": ",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"These methods are generally asynchronous and more complex. "),Object(i.b)("li",{parentName:"ul"},"A saga method is more like a flow. Each step of the flow can be asynchronous and can trigger a re-render"),Object(i.b)("li",{parentName:"ul"},"A saga method never updates the Redux state by itself. It always calls a ",Object(i.b)("em",{parentName:"li"},"Reducer")," method to do that.")))),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Check the ",Object(i.b)("strong",{parentName:"p"},"advanced")," section to have an in depth view of a service.")),Object(i.b)("h3",{id:"parameters"},"Parameters"),Object(i.b)("h4",{id:"inputs"},"Inputs"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"serviceDefinition: {\n\n  name: string, // the name of the service. Must be unique\n  reducers: Reducer, // The Reducer methods\n  sagas: Sagas, // The Saga methods\n  inject: { // Inject other services into this service so it can use them.\n    myService1, // myService1 is a service imported via import myService1 from '...'\n    myService2,\n    ...\n  },\n  init: function(context) // method called just after the creation of the service.\n\n}\n")),Object(i.b)("h5",{id:"reducer"},"Reducer"),Object(i.b)("p",null,"Reducer is an object where each entry represents a ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"Reducer")," method")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"Reducer: {\n  method1: function (state,    // the full redux state\n                     payload,  // the payload of the action that was dispatched\n                     context),\n  method2: function (state, \n                     payload),\n  ...\n}\n")),Object(i.b)("h5",{id:"saga"},"Saga"),Object(i.b)("p",null,"Saga is an object where each entry represents a ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"Saga")," method")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Be sure to read the ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://redux-saga.js.org/"}),"documentation of Redux Saga")," to understand exactly how it works. Oneki.js tries to hide most of the complexity, but it's important to understand how it works underneath.")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"Saga: {\n  method3: latest ( // Saga effect. could be: latest | every | leading. Indicate how to handle an action when another action of the same type is still in progress.\n              function* (payload, // the payload of the action that was dispatched\n                        context)), \n  method4: every (\n              function* (payload,\n                        context)), \n  ...\n}\n")),Object(i.b)("h4",{id:"outputs"},"Outputs"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"// A singleton service that has all reducer and saga methods defined in the serviceDefinition\n// The signature of these methods is the same whether they are Reducer or Saga.\nservice: {\n\n  method1: function(payload),\n  method2: function(payload),\n  method3: function(payload),\n  method4: function(payload),\n  ...\n\n}\n")),Object(i.b)("h2",{id:"examples"},"Examples"),Object(i.b)("h3",{id:"minimal-example"},"Minimal example"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),'import { useNotifications, useNotificationService } from "onekijs";\nimport React, { useCallback } from "react";\n\nexport default () => {\n  // inject the central notificationService\n  const notificationService = useNotificationService();\n\n  // Function to send a notification on the topic referenced by the attribute "type"\n  const sendNotification = useCallback(\n    (type, msg) => {\n      notificationService.send({\n        topic: type,\n        payload: {\n          message: msg\n        }\n      });\n    },\n    [notificationService]\n  );\n\n  return (\n    <div>\n      <button onClick={() => sendNotification("error", "This is an error message")}>\n        Send an error notification\n      </button>\n      |\n      <button onClick={() => sendNotification("success", "This is a sucess message")}>\n        Send a success notification\n      </button>\n      <SimpleNotificationWidget />\n    </div>\n  );\n};\n\n// Very simple Notification Widget\n// Normally, this widget is central to the application (i.e: directly under <App/>)\nconst SimpleNotificationWidget = () => {\n  const errors = useNotifications("error");\n  const successes = useNotifications("success");\n\n  return (\n    <>\n      <div>\n        {errors.map((notification, index) => (\n          <div style={{ backgroundColor: "red" }}>\n            {notification.payload.message}\n          </div>\n        ))}\n        {successes.map((notification, index) => (\n          <div style={{ backgroundColor: "green" }}>\n            {notification.payload.message}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n')))}l.isMDXComponent=!0},167:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),l=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},d=function(e){var t=l(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),b=r,m=d["".concat(o,".").concat(b)]||d[b]||p[b]||i;return n?a.a.createElement(m,c({ref:t},u,{components:n})):a.a.createElement(m,c({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var u=2;u<i;u++)o[u]=n[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},168:function(e,t,n){"use strict";var r=n(0),a=n(48);t.a=function(){return Object(r.useContext)(a.a)}},170:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(175);var r=n(168);function a(e){var t=(Object(r.a)().siteConfig||{}).baseUrl,n=void 0===t?"/":t;if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?n+e.slice(1):n+e}},173:function(e,t,n){var r=n(66),a=n(23);e.exports=function(e,t,n){if(r(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(a(e))}},174:function(e,t,n){var r=n(2)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,!"/./"[e](t)}catch(a){}}return!0}},175:function(e,t,n){"use strict";var r=n(17),a=n(34),i=n(173),o="".startsWith;r(r.P+r.F*n(174)("startsWith"),"String",{startsWith:function(e){var t=i(this,e,"startsWith"),n=a(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return o?o.call(t,r,n):t.slice(n,n+r.length)===r}})}}]);