"use strict";(self.webpackChunkonekijs_website=self.webpackChunkonekijs_website||[]).push([[80739],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return c}});var a=n(67294),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r().createContext({}),s=function(e){var t=r().useContext(o),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},m=function(e){var t=s(e.components);return r().createElement(o.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return r().createElement(r().Fragment,{},t)}},u=r().forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,c=m["".concat(l,".").concat(u)]||m[u]||k[u]||i;return n?r().createElement(c,p(p({ref:t},o),{},{components:n})):r().createElement(c,p({ref:t},o))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=u;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var o=2;o<i;o++)l[o]=n[o];return r().createElement.apply(null,l)}return r().createElement.apply(null,n)}u.displayName="MDXCreateElement"},23243:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return d},default:function(){return u},frontMatter:function(){return p},metadata:function(){return o},toc:function(){return m}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),l=["components"],p={id:"AppStore",title:"Interface: AppStore<S, A>",sidebar_label:"AppStore",sidebar_position:0,custom_edit_url:null},d=void 0,o={unversionedId:"api/interfaces/AppStore",id:"api/interfaces/AppStore",title:"Interface: AppStore<S, A>",description:"Type parameters",source:"@site/docs/api/interfaces/AppStore.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/AppStore",permalink:"/docs/api/interfaces/AppStore",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"AppStore",title:"Interface: AppStore<S, A>",sidebar_label:"AppStore",sidebar_position:0,custom_edit_url:null},sidebar:"someSidebar",previous:{title:"AppStateProps",permalink:"/docs/api/interfaces/AppStateProps"},next:{title:"AsyncBindState",permalink:"/docs/api/interfaces/AsyncBindState"}},s={},m=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"reducersSymbol",id:"reducerssymbol",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"sagasSymbol",id:"sagassymbol",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"dispatch",id:"dispatch",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"Methods",id:"methods",level:2},{value:"observable",id:"observable",level:3},{value:"Returns",id:"returns",level:4},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"cancelSaga",id:"cancelsaga",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"getState",id:"getstate",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"injectReducers",id:"injectreducers",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"removeReducers",id:"removereducers",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"replaceReducer",id:"replacereducer",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"runSaga",id:"runsaga",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"subscribe",id:"subscribe",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"Defined in",id:"defined-in-10",level:4}],k={toc:m};function u(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"S")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"A")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("inlineCode",{parentName:"td"},"Action``AnyAction"))))),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Store"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"S"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"A"),">"),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"AppStore"))))),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"reducerssymbol"},"[reducersSymbol]"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"[reducersSymbol]"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/AnonymousObject"},(0,i.kt)("inlineCode",{parentName:"a"},"AnonymousObject")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"onekijs/packages/onekijs-framework/src/types/app.ts:17"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"sagassymbol"},"[sagasSymbol]"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"[sagasSymbol]"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/AnonymousObject"},(0,i.kt)("inlineCode",{parentName:"a"},"AnonymousObject")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"onekijs/packages/onekijs-framework/src/types/app.ts:18"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"dispatch"},"dispatch"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"dispatch"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Dispatch"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"A"),">"),(0,i.kt)("p",null,"Dispatches an action. It is the only way to trigger a state change."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"reducer")," function, used to create the store, will be called with the\ncurrent state tree and the given ",(0,i.kt)("inlineCode",{parentName:"p"},"action"),". Its return value will be\nconsidered the ",(0,i.kt)("strong",{parentName:"p"},"next")," state of the tree, and the change listeners will\nbe notified."),(0,i.kt)("p",null,"The base implementation only supports plain object actions. If you want\nto dispatch a Promise, an Observable, a thunk, or something else, you\nneed to wrap your store creating function into the corresponding\nmiddleware. For example, see the documentation for the ",(0,i.kt)("inlineCode",{parentName:"p"},"redux-thunk"),"\npackage. Even the middleware will eventually dispatch plain object\nactions using this method."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"param"))," A plain object representing \u201cwhat changed\u201d. It is a good\nidea to keep actions serializable so you can record and replay user\nsessions, or use the time travelling ",(0,i.kt)("inlineCode",{parentName:"p"},"redux-devtools"),". An action must\nhave a ",(0,i.kt)("inlineCode",{parentName:"p"},"type")," property which may not be ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),". It is a good idea\nto use string constants for action types."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"returns"))," For convenience, the same action object you dispatched."),(0,i.kt)("p",null,"Note that, if you use a custom middleware, it may wrap ",(0,i.kt)("inlineCode",{parentName:"p"},"dispatch()")," to\nreturn something else (for example, a Promise you can await)."),(0,i.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,i.kt)("p",null,"Store.dispatch"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"onekijs/node_modules/redux/index.d.ts:292"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"observable"},"[observable]"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"[observable]"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Observable"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"S"),">"),(0,i.kt)("p",null,"Interoperability point for observable/reactive libraries."),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Observable"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"S"),">"),(0,i.kt)("p",null,"A minimal observable of state changes.\nFor more information, see the observable proposal:\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/tc39/proposal-observable"},"https://github.com/tc39/proposal-observable")),(0,i.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,i.kt)("p",null,"Store.","_","_","@observable@28283"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"onekijs/node_modules/redux/index.d.ts:344"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"cancelsaga"},"cancelSaga"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"cancelSaga"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"namespace"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"name"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"namespace")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"onekijs/packages/onekijs-framework/src/types/app.ts:20"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getstate"},"getState"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getState"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"S")),(0,i.kt)("p",null,"Reads the state tree managed by the store."),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"S")),(0,i.kt)("p",null,"The current state tree of your application."),(0,i.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,i.kt)("p",null,"Store.getState"),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"onekijs/node_modules/redux/index.d.ts:299"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"injectreducers"},"injectReducers"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"injectReducers"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"bind"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"namespace"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"reducers"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bind")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/Service"},(0,i.kt)("inlineCode",{parentName:"a"},"Service")),"<",(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/AnyState"},(0,i.kt)("inlineCode",{parentName:"a"},"AnyState")),">")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"namespace")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"reducers")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/AnonymousObject"},(0,i.kt)("inlineCode",{parentName:"a"},"AnonymousObject")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"onekijs/packages/onekijs-framework/src/types/app.ts:21"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"removereducers"},"removeReducers"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"removeReducers"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"namespace"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"reducers"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"namespace")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"reducers")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/interfaces/AnonymousObject"},(0,i.kt)("inlineCode",{parentName:"a"},"AnonymousObject")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"onekijs/packages/onekijs-framework/src/types/app.ts:22"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"replacereducer"},"replaceReducer"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"replaceReducer"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"nextReducer"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Replaces the reducer currently used by the store to calculate the state."),(0,i.kt)("p",null,"You might need this if your app implements code splitting and you want to\nload some of the reducers dynamically. You might also need this if you\nimplement a hot reloading mechanism for Redux."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"nextReducer")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Reducer"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"S"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"A"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The reducer for the store to use instead.")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,i.kt)("p",null,"Store.replaceReducer"),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"onekijs/node_modules/redux/index.d.ts:336"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"runsaga"},"runSaga"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"runSaga"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"namespace"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"saga"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"name"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"namespace")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"saga")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/types/Saga"},(0,i.kt)("inlineCode",{parentName:"a"},"Saga")),"<",(0,i.kt)("inlineCode",{parentName:"td"},"any"),"[]",">")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string"))))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"onekijs/packages/onekijs-framework/src/types/app.ts:19"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"subscribe"},"subscribe"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"subscribe"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Unsubscribe")),(0,i.kt)("p",null,"Adds a change listener. It will be called any time an action is\ndispatched, and some part of the state tree may potentially have changed.\nYou may then call ",(0,i.kt)("inlineCode",{parentName:"p"},"getState()")," to read the current state tree inside the\ncallback."),(0,i.kt)("p",null,"You may call ",(0,i.kt)("inlineCode",{parentName:"p"},"dispatch()")," from a change listener, with the following\ncaveats:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The subscriptions are snapshotted just before every ",(0,i.kt)("inlineCode",{parentName:"p"},"dispatch()")," call.\nIf you subscribe or unsubscribe while the listeners are being invoked,\nthis will not have any effect on the ",(0,i.kt)("inlineCode",{parentName:"p"},"dispatch()")," that is currently in\nprogress. However, the next ",(0,i.kt)("inlineCode",{parentName:"p"},"dispatch()")," call, whether nested or not,\nwill use a more recent snapshot of the subscription list.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The listener should not expect to see all states changes, as the state\nmight have been updated multiple times during a nested ",(0,i.kt)("inlineCode",{parentName:"p"},"dispatch()")," before\nthe listener is called. It is, however, guaranteed that all subscribers\nregistered before the ",(0,i.kt)("inlineCode",{parentName:"p"},"dispatch()")," started will be called with the latest\nstate by the time it exits."))),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"listener")),(0,i.kt)("td",{parentName:"tr",align:"left"},"() => ",(0,i.kt)("inlineCode",{parentName:"td"},"void")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A callback to be invoked on every dispatch.")))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Unsubscribe")),(0,i.kt)("p",null,"A function to remove this change listener."),(0,i.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,i.kt)("p",null,"Store.subscribe"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"onekijs/node_modules/redux/index.d.ts:325"))}u.isMDXComponent=!0}}]);