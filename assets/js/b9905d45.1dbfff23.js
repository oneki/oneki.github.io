"use strict";(self.webpackChunkonekijs_website=self.webpackChunkonekijs_website||[]).push([[75396],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return k}});var r=n(67294),a=n.n(r);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a().createContext({}),c=function(e){var t=a().useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a().createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a().createElement(a().Fragment,{},t)}},m=a().forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,k=u["".concat(i,".").concat(m)]||u[m]||d[m]||l;return n?a().createElement(k,o(o({ref:t},s),{},{components:n})):a().createElement(k,o({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a().createElement.apply(null,i)}return a().createElement.apply(null,n)}m.displayName="MDXCreateElement"},34673:function(e,t,n){n.d(t,{Z:function(){return g}});var r=n(87462),a=n(67294),l=n.n(a),i=n(86010),o=n(63366),p=n(72389),s=n(86043),c="details_lb9f",u="isBrowser_bmU9",d="collapsibleContent_i85q",m=["summary","children"];function k(e){return!!e&&("SUMMARY"===e.tagName||k(e.parentElement))}function b(e,t){return!!e&&(e===t||b(e.parentElement,t))}function f(e){var t=e.summary,n=e.children,f=(0,o.Z)(e,m),h=(0,p.Z)(),g=(0,a.useRef)(null),y=(0,s.u)({initialState:!f.open}),N=y.collapsed,v=y.setCollapsed,w=(0,a.useState)(f.open),S=w[0],O=w[1],j=l().isValidElement(t)?t:l().createElement("summary",null,null!=t?t:"Details");return l().createElement("details",(0,r.Z)({},f,{ref:g,open:S,"data-collapsed":N,className:(0,i.Z)(c,h&&u,f.className),onMouseDown:function(e){k(e.target)&&e.detail>1&&e.preventDefault()},onClick:function(e){e.stopPropagation();var t=e.target;k(t)&&b(t,g.current)&&(e.preventDefault(),N?(v(!1),O(!0)):v(!0))}}),j,l().createElement(s.z,{lazy:!1,collapsed:N,disableSSRStyle:!0,onCollapseTransitionEnd:function(e){v(e),O(!e)}},l().createElement("div",{className:d},n)))}var h="details_b_Ee";function g(e){var t=Object.assign({},e);return l().createElement(f,(0,r.Z)({},t,{className:(0,i.Z)("alert alert--info",h,t.className)}))}},22033:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return u}});var r=n(87462),a=n(63366),l=(n(67294),n(3905)),i=(n(34673),["components"]),o={id:"AppStore",title:"AppStore",sidebar_label:"AppStore"},p=void 0,s={unversionedId:"framework-api/interfaces/AppStore",id:"framework-api/interfaces/AppStore",title:"AppStore",description:"Properties",source:"@site/docs/framework-api/interfaces/AppStore.md",sourceDirName:"framework-api/interfaces",slug:"/framework-api/interfaces/AppStore",permalink:"/docs/framework-api/interfaces/AppStore",draft:!1,editUrl:"https://github.com/oneki/oneki.github.io/edit/source/docs/framework-api/interfaces/AppStore.md",tags:[],version:"current",frontMatter:{id:"AppStore",title:"AppStore",sidebar_label:"AppStore"},sidebar:"someSidebar",previous:{title:"AppStateProps",permalink:"/docs/framework-api/interfaces/AppStateProps"},next:{title:"AsyncBindState",permalink:"/docs/framework-api/interfaces/AsyncBindState"}},c={},u=[{value:"Properties",id:"properties",level:3}],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"__type(namespace: string,saga: Saga<any[]>,name: string): void\n")),(0,l.kt)("br",null),(0,l.kt)("h3",{id:"properties"},"Properties"),(0,l.kt)("font",{size:"2"},(0,l.kt)("i",null,"(Mandatory properties are in bold)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Properties"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"cancelSaga")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"getState")),(0,l.kt)("td",{parentName:"tr",align:null},"getState(): S"),(0,l.kt)("td",{parentName:"tr",align:null},"Reads the state tree managed by the store.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"injectReducers")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"removeReducers")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"replaceReducer")),(0,l.kt)("td",{parentName:"tr",align:null},"replaceReducer(nextReducer: Reducer<S, A",">","): void"),(0,l.kt)("td",{parentName:"tr",align:null},"Replaces the reducer currently used by the store to calculate the state.")))),(0,l.kt)("p",null,"You might need this if your app implements code splitting and you want to",(0,l.kt)("br",{parentName:"p"}),"\n","load some of the reducers dynamically. You might also need this if you",(0,l.kt)("br",{parentName:"p"}),"\n","implement a hot reloading mechanism for Redux. |\n| ",(0,l.kt)("strong",{parentName:"p"},"runSaga")," |  |  |\n| ",(0,l.kt)("strong",{parentName:"p"},"subscribe")," | subscribe(listener: ): Unsubscribe | Adds a change listener. It will be called any time an action is",(0,l.kt)("br",{parentName:"p"}),"\n","dispatched, and some part of the state tree may potentially have changed.",(0,l.kt)("br",{parentName:"p"}),"\n","You may then call ",(0,l.kt)("inlineCode",{parentName:"p"},"getState()")," to read the current state tree inside the",(0,l.kt)("br",{parentName:"p"}),"\n","callback."),(0,l.kt)("p",null,"You may call ",(0,l.kt)("inlineCode",{parentName:"p"},"dispatch()")," from a change listener, with the following",(0,l.kt)("br",{parentName:"p"}),"\n","caveats:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"The subscriptions are snapshotted just before every ",(0,l.kt)("inlineCode",{parentName:"p"},"dispatch()")," call.",(0,l.kt)("br",{parentName:"p"}),"\n","If you subscribe or unsubscribe while the listeners are being invoked,",(0,l.kt)("br",{parentName:"p"}),"\n","this will not have any effect on the ",(0,l.kt)("inlineCode",{parentName:"p"},"dispatch()")," that is currently in",(0,l.kt)("br",{parentName:"p"}),"\n","progress. However, the next ",(0,l.kt)("inlineCode",{parentName:"p"},"dispatch()")," call, whether nested or not,",(0,l.kt)("br",{parentName:"p"}),"\n","will use a more recent snapshot of the subscription list.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"The listener should not expect to see all states changes, as the state",(0,l.kt)("br",{parentName:"p"}),"\n","might have been updated multiple times during a nested ",(0,l.kt)("inlineCode",{parentName:"p"},"dispatch()")," before",(0,l.kt)("br",{parentName:"p"}),"\n","the listener is called. It is, however, guaranteed that all subscribers",(0,l.kt)("br",{parentName:"p"}),"\n","registered before the ",(0,l.kt)("inlineCode",{parentName:"p"},"dispatch()")," started will be called with the latest",(0,l.kt)("br",{parentName:"p"}),"\n","state by the time it exits. |\n| dispatch | Dispatch<A",">"," | Dispatches an action. It is the only way to trigger a state change.",(0,l.kt)("br",null),(0,l.kt)("br",null),"The ",(0,l.kt)("code",null,"reducer")," function, used to create the store, will be called with the",(0,l.kt)("br",null),"current state tree and the given ",(0,l.kt)("code",null,"action"),". Its return value will be",(0,l.kt)("br",null),"considered the ",(0,l.kt)("strong",{parentName:"p"},"next")," state of the tree, and the change listeners will",(0,l.kt)("br",null),"be notified.",(0,l.kt)("br",null),(0,l.kt)("br",null),"The base implementation only supports plain object actions. If you want",(0,l.kt)("br",null),"to dispatch a Promise, an Observable, a thunk, or something else, you",(0,l.kt)("br",null),"need to wrap your store creating function into the corresponding",(0,l.kt)("br",null),"middleware. For example, see the documentation for the ",(0,l.kt)("code",null,"redux-thunk"),(0,l.kt)("br",null),"package. Even the middleware will eventually dispatch plain object",(0,l.kt)("br",null),"actions using this method. |"))))}m.isMDXComponent=!0}}]);