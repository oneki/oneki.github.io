"use strict";(self.webpackChunkonekijs_website=self.webpackChunkonekijs_website||[]).push([[58554],{85162:function(e,t,a){a.d(t,{Z:function(){return o}});var n=a(67294),i=a.n(n),r=a(86010),l="tabItem_Ymn6";function o(e){var t=e.children,a=e.hidden,n=e.className;return i().createElement("div",{role:"tabpanel",className:(0,r.Z)(l,n),hidden:a},t)}},74866:function(e,t,a){a.d(t,{Z:function(){return w}});var n=a(87462),i=a(67294),r=a.n(i),l=a(86010),o=a(12466),s=a(45315),u=a(91980),c=a(67392),d=a(50012);function p(e){return function(e){var t,a;return null!=(t=null==(a=r().Children.map(e,(function(e){if(!e||(0,i.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:a.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function m(e){var t=e.values,a=e.children;return(0,i.useMemo)((function(){var e=null!=t?t:p(a);return function(e){var t=(0,c.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,a])}function h(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function v(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId,r=(0,s.k6)(),l=function(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:a,groupId:n});return[(0,u._X)(l),(0,i.useCallback)((function(e){if(l){var t=new URLSearchParams(r.location.search);t.set(l,e),r.replace(Object.assign({},r.location,{search:t.toString()}))}}),[l,r])]}function g(e){var t,a,n,r,l=e.defaultValue,o=e.queryString,s=void 0!==o&&o,u=e.groupId,c=m(e),p=(0,i.useState)((function(){return function(e){var t,a=e.defaultValue,n=e.tabValues;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!h({value:a,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+n.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}var i=null!=(t=n.find((function(e){return e.default})))?t:n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:l,tabValues:c})})),g=p[0],b=p[1],k=v({queryString:s,groupId:u}),f=k[0],y=k[1],N=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),a=(0,d.Nk)(t),n=a[0],r=a[1],[n,(0,i.useCallback)((function(e){t&&r.set(e)}),[t,r])]),x=N[0],w=N[1],E=function(){var e=null!=f?f:x;return h({value:e,tabValues:c})?e:null}();return(0,i.useLayoutEffect)((function(){E&&b(E)}),[E]),{selectedValue:g,selectValue:(0,i.useCallback)((function(e){if(!h({value:e,tabValues:c}))throw new Error("Can't select invalid tab value="+e);b(e),y(e),w(e)}),[y,w,c]),tabValues:c}}var b=a(72389),k="tabList__CuJ",f="tabItem_LNqP";function y(e){var t=e.className,a=e.block,i=e.selectedValue,s=e.selectValue,u=e.tabValues,c=[],d=(0,o.o5)().blockElementScrollPositionUntilNextRender,p=function(e){var t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==i&&(d(t),s(n))},m=function(e){var t,a=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":var n,i=c.indexOf(e.currentTarget)+1;a=null!=(n=c[i])?n:c[0];break;case"ArrowLeft":var r,l=c.indexOf(e.currentTarget)-1;a=null!=(r=c[l])?r:c[c.length-1]}null==(t=a)||t.focus()};return r().createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},u.map((function(e){var t=e.value,a=e.label,o=e.attributes;return r().createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:function(e){return c.push(e)},onKeyDown:m,onClick:p},o,{className:(0,l.Z)("tabs__item",f,null==o?void 0:o.className,{"tabs__item--active":i===t})}),null!=a?a:t)})))}function N(e){var t=e.lazy,a=e.children,n=e.selectedValue,l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){var o=l.find((function(e){return e.props.value===n}));return o?(0,i.cloneElement)(o,{className:"margin-top--md"}):null}return r().createElement("div",{className:"margin-top--md"},l.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==n})})))}function x(e){var t=g(e);return r().createElement("div",{className:(0,l.Z)("tabs-container",k)},r().createElement(y,(0,n.Z)({},e,t)),r().createElement(N,(0,n.Z)({},e,t)))}function w(e){var t=(0,b.Z)();return r().createElement(x,(0,n.Z)({key:String(t)},e))}},64094:function(e,t,a){var n=a(67294),i=a.n(n),r=a(74866);a(85162);t.Z=function(e){var t=e.children;return i().createElement(r.Z,{groupId:"application-types",defaultValue:"cra",values:[{label:"Vite App",value:"cra"},{label:"Nextjs App",value:"next"}]},t)}},20819:function(e,t,a){a.d(t,{J5:function(){return m},b4:function(){return c}});var n=a(67294),i=a.n(n),r=a(64094),l=a(85162),o=a(95665),s=a.n(o),u=a(74866),c=function(e){var t=e.path,a=e.craPath,n=e.nextPath,o=e.branch,u=void 0===o?"master":o;return i().createElement(r.Z,null,i().createElement(l.Z,{value:"cra"},i().createElement(s(),{language:"tsx"},"https://github.com/oneki/onekijs/blob/"+u+"/getting-started/cra/"+(a||t)+"\n")),i().createElement(l.Z,{value:"next"},i().createElement(s(),{language:"tsx"},"https://github.com/oneki/onekijs/blob/"+u+"/getting-started/next/"+(n||t)+"\n")))},d=function(e){var t=e.path,a=e.branch,n=void 0===a?"master":a,r=t;return t.startsWith("http")||(r="https://github.com/oneki/onekijs/blob/"+n+"/examples/cra-examples/src/"+t),i().createElement(s(),{language:"tsx"},r+"\n")},p=function(e){var t=e.path,a=e.height,n=void 0===a?500:a,r=t;return t.startsWith("http")||(r="https://examples.oneki.net/"+t),i().createElement("iframe",{src:r,style:{width:"100%",height:n+"px",border:"10px solid #EEE",bordeRadius:"4px",overflow:"hidden"},title:"Example preview",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts allow-top-navigation"})},m=function(e){var t=e.values,a=e.branch,n=void 0===a?"master":a,r=e.preview,o=t.map((function(e){return{label:e.label,value:e.label}}));r&&o.push({label:"\ud83d\udc41 Preview",value:"__preview__"});var s=t.map((function(e){return i().createElement(l.Z,{value:e.label},i().createElement(d,{path:e.path,branch:n}))}));return r&&s.push(i().createElement(l.Z,{value:"__preview__"},i().createElement(p,{path:r.path,height:r.height}))),console.log(o),i().createElement(u.Z,{groupId:"example-types",defaultValue:t[0].label,values:o},s)}},32779:function(e,t,a){a.d(t,{YK:function(){return s},g0:function(){return u}});var n=a(67294),i=a.n(n),r=a(64094),l=a(85162),o=function(e){var t=e.name,a=e.height,n=void 0===a?500:a,r=e.modules,l=e.branch,o=void 0===l?"master":l,s=e.type,u=void 0===s?"examples":s,c=e.view,d=void 0===c?"editor":c,p="https://oneki-gs-vite-"+t.split("-")[0]+".surge.sh/",m="https://codesandbox.io/p/sandbox/github/oneki/onekijs/tree/"+o+"/"+u+"/"+t+"?codemirror=1&fontsize=14&theme=dark&view="+d;r&&(m+="&module=",r.forEach((function(e,t){t>0&&(m+=","),m+=e})));var h="onekijs-"+t.split("/").join("-"),v="https://github.com/oneki/onekijs/tree/"+o+"/"+u+"/"+t;return i().createElement(i().Fragment,null,i().createElement("iframe",{src:p,style:{width:"100%",height:n+"px",border:"10px solid #EEE",bordeRadius:"4px",overflow:"hidden"},title:h,allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}),i().createElement("div",{style:{textAlign:"center"}},i().createElement("a",{href:m,target:"_blank"},"Open in CodeSandbox")," | ",i().createElement("a",{href:v,target:"_blank"},"View code on GitHub")))},s=function(e){var t=e.name;return i().createElement("div",{style:{textAlign:"right"}},i().createElement("a",{href:"https://codesandbox.io/p/sandbox/github/oneki/onekijs/tree/master/"+t,target:"_blank",style:{display:"inline-flex",alignItems:"center",height:"32px",padding:"0px 12px",fontSize:"13px",fontWeight:500,color:"rgb(255, 255, 255)",backgroundColor:"#2196f3",borderRadius:"4px",textDecoration:"none",cursor:"pointer",marginBottom:"2px"}},"Open in Codesandbox"))},u=function(e){var t=e.name,a=e.modules,n=e.craName,s=e.craModules,u=e.nextName,c=e.nextModules,d=e.height,p=void 0===d?600:d,m=e.branch,h=void 0===m?"master":m;return i().createElement(r.Z,null,i().createElement(l.Z,{value:"cra"},i().createElement(o,{name:n||t,type:"getting-started/cra",view:"preview",branch:h,height:p,modules:s||a})),i().createElement(l.Z,{value:"next"},i().createElement(o,{name:u||t,type:"getting-started/next",view:"preview",branch:h,height:p,modules:c||a})))};t.ZP=o},46679:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return m}});var n=a(87462),i=a(63366),r=(a(67294),a(3905)),l=(a(44996),a(64094),a(85162),a(32779)),o=a(20819),s=["components"],u={id:"service",title:"Adding a service",sidebar_label:"Adding a service"},c=void 0,d={unversionedId:"getting-started/service",id:"getting-started/service",title:"Adding a service",description:"This step consists in creating its own service.",source:"@site/docs/getting-started/011_service.md",sourceDirName:"getting-started",slug:"/getting-started/service",permalink:"/docs/getting-started/service",draft:!1,editUrl:"https://github.com/oneki/oneki.github.io/edit/source/docs/getting-started/011_service.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{id:"service",title:"Adding a service",sidebar_label:"Adding a service"},sidebar:"someSidebar",previous:{title:"Using form for user input",permalink:"/docs/getting-started/form"},next:{title:"Theming",permalink:"/docs/getting-started/theming"}},p={},m=[{value:"Final result",id:"final-result",level:2},{value:"Creating a service",id:"creating-a-service",level:2},{value:"Adding reducers",id:"adding-reducers",level:3},{value:"Adding sagas",id:"adding-sagas",level:3},{value:"Using the service",id:"using-the-service",level:2},{value:"Handling error",id:"handling-error",level:2},{value:"Next step",id:"next-step",level:2}],h={toc:m};function v(e){var t=e.components,a=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This step consists in creating its own service."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The topic on this page is for advanced use cases.",(0,r.kt)("br",null),"\nYou will implement a service when you need to add advanced logic to your application")),(0,r.kt)("p",null,"Almost all the functionality provided by ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"onekijs"))," are based on services.",(0,r.kt)("br",null),"\nThe role of a service is to mutate a state. This state can be"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"a component state"),'. In this case, the service is called a "local service"',(0,r.kt)("br",null),"\nExample of hooks exposing a local service: ",(0,r.kt)("inlineCode",{parentName:"li"},"useGet"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"usePost"),", ..."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"the global redux state"),". In this case, the service is called a global service.",(0,r.kt)("br",null),"\nExample of hooks exposing global services: ",(0,r.kt)("inlineCode",{parentName:"li"},"useNotificationService"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"useSecurityContext"))),(0,r.kt)("p",null,"The service mutates the state following best practices (immutability, action, reducers, ...)",(0,r.kt)("br",null),"\nTo mutate the state, the service exposes two types of methods:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Reducer methods")," (annoted with @reducer). Only these methods can mutate the state."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Saga methods")," (annotate with @saga). These methods can orchestrate calls to reducer methods and are used to handle complex scenarios such as:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'Calling a reducer to update a "loading" variable to ',(0,r.kt)("inlineCode",{parentName:"li"},"true")),(0,r.kt)("li",{parentName:"ul"},"Letting React render the component to display the load indicator"),(0,r.kt)("li",{parentName:"ul"},"Making an AJAX request asynchronously"),(0,r.kt)("li",{parentName:"ul"},"Storing the result in the state (by calling another reducer method)"),(0,r.kt)("li",{parentName:"ul"},'Calling a reducer to update the "loading" variable to ',(0,r.kt)("inlineCode",{parentName:"li"},"false"))))),(0,r.kt)("h2",{id:"final-result"},"Final result"),(0,r.kt)("p",null,"The result of this step is as follows:"),(0,r.kt)("admonition",{title:"New in this step",type:"info"},(0,r.kt)("p",{parentName:"admonition"},'The product detail page now displays a new "Check Availability" button',(0,r.kt)("br",null),"\nWhen you click on this button, the application will call the server to check if the product is available or not")),(0,r.kt)(l.g0,{name:"step10-service",craModules:["/src/index.tsx","/src/pages/products/index.tsx"],nextModules:["/src/pages/index.tsx","/src/pages/_app.tsx"],mdxType:"GettingStartedSandbox"}),(0,r.kt)("h2",{id:"creating-a-service"},"Creating a service"),(0,r.kt)("p",null,"We want to add a button on the product page to check its availability. Clicking on the button triggers the following scenario:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add a loading indicator on the button"),(0,r.kt)("li",{parentName:"ol"},"Disable the button"),(0,r.kt)("li",{parentName:"ol"},"Make a request to the server to check availability"),(0,r.kt)("li",{parentName:"ol"},"Display the result on the product page next to the button:"),(0,r.kt)("li",{parentName:"ol"},"Remove the loading indicator"),(0,r.kt)("li",{parentName:"ol"},"Activate the button")),(0,r.kt)("p",null,"The state therefore contains the following elements:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export interface AvailabilityState {\n  // a flag to indicate if a request is progress\n  loading: boolean;\n\n  // the result of the request\n  // initial value is undefined\n  available?: boolean; // number of products available\n}\n")),(0,r.kt)("p",null,"Let's create a service to handle this state.",(0,r.kt)("br",null),"\nA service is a class that extends ",(0,r.kt)("inlineCode",{parentName:"p"},"LocalService")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"GlobalService"),". In our case, the state is local to a component and so the class extends ",(0,r.kt)("inlineCode",{parentName:"p"},"LocalService")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The class must be annotated with @service. This is something specific to Typescript that allows ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"onekijs"))," to create a proxy of this class at runtime.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"@service\nexport default class AvailabilityService extends LocalService<AvailabilityState> {\n  ...\n}\n")),(0,r.kt)("h3",{id:"adding-reducers"},"Adding reducers"),(0,r.kt)("p",null,"As mentioned before, the service contains two types of methods: ",(0,r.kt)("inlineCode",{parentName:"p"},"reducer")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"saga")),(0,r.kt)("p",null,"For our service, we need two reducers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A reducer method to mutate the ",(0,r.kt)("inlineCode",{parentName:"li"},"loading")," field."),(0,r.kt)("li",{parentName:"ul"},"A reducer method to mutate the ",(0,r.kt)("inlineCode",{parentName:"li"},"available")," field.")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Reducer methods must be annotated with @reducer")),(0,r.kt)("p",null,"Let's add these two methods:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{3-14}","{3-14}":!0},"@service\nexport default class AvailabilityService extends LocalService<AvailabilityState> {\n  @reducer\n  setLoading(loading: boolean): void {\n    // the state is immutable\n    // however, the @reducer annotation allows updating the state\n    // like any other object (thanks to immer)\n    this.state.loading = loading;\n  }\n\n  @reducer\n  setData(data: AvailabilityResponse): void {\n    this.state.available = data.available;\n    this.setLoading(false); // A reducer can call another reducer\n  }\n}\n")),(0,r.kt)("h3",{id:"adding-sagas"},"Adding sagas"),(0,r.kt)("p",null,"For our service, we need a saga that will implement the following scenario:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Update the field ",(0,r.kt)("inlineCode",{parentName:"li"},"loading")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"true")),(0,r.kt)("li",{parentName:"ol"},"Make a request to the server to check availability"),(0,r.kt)("li",{parentName:"ol"},"Put the result of the query in the state"),(0,r.kt)("li",{parentName:"ol"},"Update the field ",(0,r.kt)("inlineCode",{parentName:"li"},"loading")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"false"))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Saga methods must be annotated with @saga")),(0,r.kt)("p",null,"Let's add this method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{18-23}","{18-23}":!0},"@service\nexport default class AvailabilityService extends LocalService<AvailabilityState> {\n  @reducer\n  setLoading(loading: boolean): void {\n    // the state is immutable\n    // however, the @reducer annotation allows updating the state\n    // like any other object (thanks to immer)\n    this.state.loading = loading;\n  }\n\n  @reducer\n  setData(data: AvailabilityResponse): void {\n    this.state.available = data.available;\n    this.setLoading(false); // A reducer can call another reducer\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  @saga(SagaEffect.Latest)\n  *checkAvailability(productId: number) {\n    yield this.setLoading(true);\n    const data: AvailabilityResponse = yield asyncGet(`/products/${productId}/availability`);\n    yield this.setData(data);\n  }\n}\n")),(0,r.kt)("h2",{id:"using-the-service"},"Using the service"),(0,r.kt)("p",null,"To instantiate this service, ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"onekijs"))," provides the ",(0,r.kt)("inlineCode",{parentName:"p"},"useLocalService")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"useGlobalService")," hooks",(0,r.kt)("br",null),"\nsince we have created a local service, we must use ",(0,r.kt)("inlineCode",{parentName:"p"},"useLocalService"),":"),(0,r.kt)("p",null,"Let's update the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProductDetails")," component to add a ",(0,r.kt)("inlineCode",{parentName:"p"},"Check Availability")," button that uses the service:"),(0,r.kt)(o.b4,{path:"/step10-service/src/modules/products/components/ProductDetails.tsx",mdxType:"GettingStartedSnippet"}),(0,r.kt)("h2",{id:"handling-error"},"Handling error"),(0,r.kt)("p",null,"We can improve the service to properly handle errors returned by the server.",(0,r.kt)("br",null),"\nA common approch is to send a notification on the ",(0,r.kt)("inlineCode",{parentName:"p"},"error")," topic so the ",(0,r.kt)("inlineCode",{parentName:"p"},"<NotificationCenter />")," automatically displays it"),(0,r.kt)("p",null,"To be able to use the NotificationService inside the AvailabilityService, one must inject it."),(0,r.kt)(o.b4,{path:"/step10-service/src/modules/products/services/AvailabilityService.ts",mdxType:"GettingStartedSnippet"}),(0,r.kt)("h2",{id:"next-step"},"Next step"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"theming"},"In the next step")),", we present you how to have a coherent look and feel thanks to **`onekijs-ui``."))}v.isMDXComponent=!0}}]);