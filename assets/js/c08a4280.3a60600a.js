"use strict";(self.webpackChunkonekijs_website=self.webpackChunkonekijs_website||[]).push([[85747],{34673:function(e,t,n){n.d(t,{Z:function(){return b}});var a=n(87462),r=n(67294),l=n.n(r),o=n(86010),i=n(63366),u=n(72389),s=n(86043),p="details_lb9f",c="isBrowser_bmU9",d="collapsibleContent_i85q",m=["summary","children"];function g(e){return!!e&&("SUMMARY"===e.tagName||g(e.parentElement))}function k(e,t){return!!e&&(e===t||k(e.parentElement,t))}function h(e){var t=e.summary,n=e.children,h=(0,i.Z)(e,m),f=(0,u.Z)(),b=(0,r.useRef)(null),v=(0,s.u)({initialState:!h.open}),N=v.collapsed,y=v.setCollapsed,w=(0,r.useState)(h.open),x=w[0],E=w[1],C=l().isValidElement(t)?t:l().createElement("summary",null,null!=t?t:"Details");return l().createElement("details",(0,a.Z)({},h,{ref:b,open:x,"data-collapsed":N,className:(0,o.Z)(p,f&&c,h.className),onMouseDown:function(e){g(e.target)&&e.detail>1&&e.preventDefault()},onClick:function(e){e.stopPropagation();var t=e.target;g(t)&&k(t,b.current)&&(e.preventDefault(),N?(y(!1),E(!0)):y(!0))}}),C,l().createElement(s.z,{lazy:!1,collapsed:N,disableSSRStyle:!0,onCollapseTransitionEnd:function(e){y(e),E(!e)}},l().createElement("div",{className:d},n)))}var f="details_b_Ee";function b(e){var t=Object.assign({},e);return l().createElement(h,(0,a.Z)({},t,{className:(0,o.Z)("alert alert--info",f,t.className)}))}},85162:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(67294),r=n.n(a),l=n(86010),o="tabItem_Ymn6";function i(e){var t=e.children,n=e.hidden,a=e.className;return r().createElement("div",{role:"tabpanel",className:(0,l.Z)(o,a),hidden:n},t)}},74866:function(e,t,n){n.d(t,{Z:function(){return x}});var a=n(87462),r=n(67294),l=n.n(r),o=n(86010),i=n(12466),u=n(45315),s=n(91980),p=n(67392),c=n(50012);function d(e){return function(e){var t,n;return null!=(t=null==(n=l().Children.map(e,(function(e){if(!e||(0,r.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function m(e){var t=e.values,n=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:d(n);return function(e){var t=(0,p.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function g(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function k(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId,l=(0,u.k6)(),o=function(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:n,groupId:a});return[(0,s._X)(o),(0,r.useCallback)((function(e){if(o){var t=new URLSearchParams(l.location.search);t.set(o,e),l.replace(Object.assign({},l.location,{search:t.toString()}))}}),[o,l])]}function h(e){var t,n,a,l,o=e.defaultValue,i=e.queryString,u=void 0!==i&&i,s=e.groupId,p=m(e),d=(0,r.useState)((function(){return function(e){var t,n=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var r=null!=(t=a.find((function(e){return e.default})))?t:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:o,tabValues:p})})),h=d[0],f=d[1],b=k({queryString:u,groupId:s}),v=b[0],N=b[1],y=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:s}.groupId),n=(0,c.Nk)(t),a=n[0],l=n[1],[a,(0,r.useCallback)((function(e){t&&l.set(e)}),[t,l])]),w=y[0],x=y[1],E=function(){var e=null!=v?v:w;return g({value:e,tabValues:p})?e:null}();return(0,r.useLayoutEffect)((function(){E&&f(E)}),[E]),{selectedValue:h,selectValue:(0,r.useCallback)((function(e){if(!g({value:e,tabValues:p}))throw new Error("Can't select invalid tab value="+e);f(e),N(e),x(e)}),[N,x,p]),tabValues:p}}var f=n(72389),b="tabList__CuJ",v="tabItem_LNqP";function N(e){var t=e.className,n=e.block,r=e.selectedValue,u=e.selectValue,s=e.tabValues,p=[],c=(0,i.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var t=e.currentTarget,n=p.indexOf(t),a=s[n].value;a!==r&&(c(t),u(a))},m=function(e){var t,n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var a,r=p.indexOf(e.currentTarget)+1;n=null!=(a=p[r])?a:p[0];break;case"ArrowLeft":var l,o=p.indexOf(e.currentTarget)-1;n=null!=(l=p[o])?l:p[p.length-1]}null==(t=n)||t.focus()};return l().createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},s.map((function(e){var t=e.value,n=e.label,i=e.attributes;return l().createElement("li",(0,a.Z)({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,key:t,ref:function(e){return p.push(e)},onKeyDown:m,onClick:d},i,{className:(0,o.Z)("tabs__item",v,null==i?void 0:i.className,{"tabs__item--active":r===t})}),null!=n?n:t)})))}function y(e){var t=e.lazy,n=e.children,a=e.selectedValue,o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var i=o.find((function(e){return e.props.value===a}));return i?(0,r.cloneElement)(i,{className:"margin-top--md"}):null}return l().createElement("div",{className:"margin-top--md"},o.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a})})))}function w(e){var t=h(e);return l().createElement("div",{className:(0,o.Z)("tabs-container",b)},l().createElement(N,(0,a.Z)({},e,t)),l().createElement(y,(0,a.Z)({},e,t)))}function x(e){var t=(0,f.Z)();return l().createElement(w,(0,a.Z)({key:String(t)},e))}},64094:function(e,t,n){var a=n(67294),r=n.n(a),l=n(74866);n(85162);t.Z=function(e){var t=e.children;return r().createElement(l.Z,{groupId:"application-types",defaultValue:"cra",values:[{label:"Vite App",value:"cra"},{label:"Nextjs App",value:"next"}]},t)}},20819:function(e,t,n){n.d(t,{J5:function(){return m},b4:function(){return p}});var a=n(67294),r=n.n(a),l=n(64094),o=n(85162),i=n(95665),u=n.n(i),s=n(74866),p=function(e){var t=e.path,n=e.craPath,a=e.nextPath,i=e.branch,s=void 0===i?"master":i;return r().createElement(l.Z,null,r().createElement(o.Z,{value:"cra"},r().createElement(u(),{language:"tsx"},"https://github.com/oneki/onekijs/blob/"+s+"/getting-started/cra/"+(n||t)+"\n")),r().createElement(o.Z,{value:"next"},r().createElement(u(),{language:"tsx"},"https://github.com/oneki/onekijs/blob/"+s+"/getting-started/next/"+(a||t)+"\n")))},c=function(e){var t=e.path,n=e.branch,a=void 0===n?"master":n,l=t;return t.startsWith("http")||(l="https://github.com/oneki/onekijs/blob/"+a+"/examples/cra-examples/src/"+t),r().createElement(u(),{language:"tsx"},l+"\n")},d=function(e){var t=e.path,n=e.height,a=void 0===n?500:n,l=t;return t.startsWith("http")||(l="https://oneki-examples.surge.sh/"+t),r().createElement("iframe",{src:l,style:{width:"100%",height:a+"px",border:"10px solid #EEE",bordeRadius:"4px",overflow:"hidden"},title:"Example preview",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts allow-top-navigation"})},m=function(e){var t=e.values,n=e.branch,a=void 0===n?"master":n,l=e.preview,i=t.map((function(e){return{label:e.label,value:e.label}}));l&&i.push({label:"\ud83d\udc41 Preview",value:"__preview__"});var u=t.map((function(e){return r().createElement(o.Z,{value:e.label},r().createElement(c,{path:e.path,branch:a}))}));return l&&u.push(r().createElement(o.Z,{value:"__preview__"},r().createElement(d,{path:l.path,height:l.height}))),console.log(i),r().createElement(s.Z,{groupId:"example-types",defaultValue:t[0].label,values:i},u)}},54946:function(e,t,n){n.r(t),n.d(t,{assets:function(){return g},contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return k}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),o=(n(44996),n(74866)),i=n(85162),u=n(20819),s=n(34673),p=["components"],c={id:"oidc-server",title:"OpenID Connect (server side)",sidebar_label:"OIDC (server side)"},d=void 0,m={unversionedId:"framework/auth/authn/oidc-server",id:"framework/auth/authn/oidc-server",title:"OpenID Connect (server side)",description:"Oneki.js supports the Open ID Connect (OIDC) authorization code flow where the authorization code is exchanged for an access token via a server. This is the most common and secure way to retrieve an access token",source:"@site/docs/framework/auth/authn/200-oidc-server.md",sourceDirName:"framework/auth/authn",slug:"/framework/auth/authn/oidc-server",permalink:"/docs/framework/auth/authn/oidc-server",draft:!1,editUrl:"https://github.com/oneki/oneki.github.io/edit/source/docs/framework/auth/authn/200-oidc-server.md",tags:[],version:"current",sidebarPosition:200,frontMatter:{id:"oidc-server",title:"OpenID Connect (server side)",sidebar_label:"OIDC (server side)"},sidebar:"someSidebar",previous:{title:"External auth",permalink:"/docs/framework/auth/authn/external"},next:{title:"OIDC (client side)",permalink:"/docs/framework/auth/authn/oidc-client"}},g={},k=[{value:"Parameters",id:"parameters",level:2},{value:"Inputs",id:"inputs",level:4},{value:"Outputs",id:"outputs",level:4},{value:"Parameters",id:"parameters-1",level:2},{value:"Inputs",id:"inputs-1",level:4},{value:"Outputs",id:"outputs-1",level:4},{value:"Parameters",id:"parameters-2",level:2},{value:"Inputs",id:"inputs-2",level:4},{value:"Outputs",id:"outputs-2",level:4},{value:"Parameters",id:"parameters-3",level:2},{value:"Inputs",id:"inputs-3",level:4},{value:"Outputs",id:"outputs-3",level:4},{value:"Configuration",id:"configuration",level:2},{value:"Mandatory attributes",id:"mandatory-attributes",level:4},{value:"Optional attributes",id:"optional-attributes",level:4},{value:"Configuration example",id:"configuration-example",level:2}],h={toc:k};function f(e){var t=e.components,n=(0,r.Z)(e,p);return(0,l.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Oneki.js")," supports the Open ID Connect (OIDC) authorization code flow where the authorization code is exchanged for an access token via a server. This is the most common and secure way to retrieve an access token ")),(0,l.kt)("p",null,"In ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"settings.ts")),', when the "idp type" is ',(0,l.kt)("strong",{parentName:"p"},'"oidc_server"'),", ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Oneki.js"))," implements the following scenario:"),(0,l.kt)("img",{src:"https://www.plantuml.com/plantuml/png/VLIxRjmm4Epr5PkhdE9EG4eLWHCOCDobIHrG94-t48yKoANZ-Ekzf28TzV2fuYvcPuUZaHu32K_nQgelQAM9IaTlu48qXAQkMn-jEtjXUpnrI9VOdj3LF48eQn4aedBoE1XX4yKnz6XFcCY49EVXTz2-QjqR77uC0ppyzEulTxuUAk1duBqeSU1PEDHU1_8eIQi3Y02tSWThN8Ssm_BfCqGjXJ6ja7s6JaMbhGBMDEfwUVe53y_ETKRloXAHBixZkyuSNGR-cPix0-HwRKjmRYoNPZEI5kxkRdLfmxU2QoJP0YFRYVRiCcWgvcN9VZX-Bynim8fNx0GbwVoEy9MFIxDlHHhDHZRSLEYrf2nXdhkvdqyBl50GD17QBYmHQmzNv0NzhjjAxwmlcglWh3cIWcHB0me3v_OVd9s_haascsShj-f3RAz88FaMsX8A4whxTzYJD8LpPSOzIGkhvd2dxbGauXoS1lIRl0ZRCT0flVRv5YuOpyL5xynlRraIUKtHZyLuR58U_lDp4gHpFUgDtYd33NICJXMRG09DMAkUqxxOLdALiIziBKnTsFPPX9OVHFwbtSjSLLMF_07oJ_03",alt:null}),(0,l.kt)("p",null,"To authenticate against an OpenID Connect Identity Provider (OIDC IDP), you have to create four pages/routes:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"login"),": this page is displayed following a click on a link or a redirect following a 401 HTTP Error"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"login callback"),": this route is called by the OIDC IDP (e.g: Google) after a successfull authentication"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"logout"),": this page is displayed following a click on a logout link or if there is no activity for x minutes (configurable via settings)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"logout callback"),": this route is called by the OIDC IDP after a successfull logout")),(0,l.kt)("p",null,"The code is the same for a NextJS App or a Create React App"),(0,l.kt)("h1",{id:"examples"},"Examples"),(0,l.kt)(s.Z,{summary:(0,l.kt)("summary",null,"Login with Google"),mdxType:"Details"},"This example describes how to redirect the user to Google so he can enter his username and password. This step is performed by ",(0,l.kt)("code",null,"GoogleLoginPage.tsx")," (",(0,l.kt)("code",null,"/auth/login/google"),")",(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Redirects to: https://accounts.google.com/o/oauth2/v2/auth?scope=openid%20email%20profile\n  &client_id=519201240542-gk79ts8svme25ve4sfuoksjvdupv7fhe.apps.googleusercontent.com&response_type=code\n  &redirect_uri=https://oneki-examples.surge.sh/auth/login/google/callback\n  &state=b3f4f525792470ca73732b4f4681809ed769e3429d782298037c63dfec92cfda\n  &code_challenge=mt2n-8AucWai57be_wj6L0iScRrZoXO3t9EevEYLvw0\n  &code_challenge_method=S256\n")),(0,l.kt)("p",null,"  Once the user is authenticated, Google redirects the user to the page handled by ",(0,l.kt)("code",null,"LoginCallbackPage.tsx")," (",(0,l.kt)("code",null,"/auth/login/google/callback"),") and provides an authorization code as a query parameter."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Redirects to: https://oneki-examples.surge.sh/auth/login/google/callback?authuser=0\n  &state=363be2fcb87af1f01cc45d6d7df0e73f0986b1ef3c4d77e5e635e2d452301957\n  &code=4%2F0Adeu5BUgbCt1aswdkBfCC0WxoKk8Fj8TaJwPdD5DAwHOcuxAfTwPY_kimKgBTgwL0yRldA\n  &scope=email+profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+openid+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile\n  &prompt=none\n")),(0,l.kt)("code",null,"LoginCallbackPage.tsx")," exchanges the authorization code to an JWT access token by calling a backend API",(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"POST /api/oauth2/google/token\nHost: https://onekijs-example-backend.vercel.app \nContent-Type: application/x-www-form-urlencoded\nContent-Length: 451\n\ngrant_type=authorization_code&\nclient_id=519201240542-gk79ts8svme25ve4sfuoksjvdupv7fhe.apps.googleusercontent.com&\nredirect_uri=https%3A%2F%2Foneki-examples.surge.sh%2Fauth%2Flogin%2Fgoogle%2Fcallback&\ncode=4%2F0Adeu5BUgbCt1aswdkBfCC0WxoKk8Fj8TaJwPdD5DAwHOcuxAfTwPY_kimKgBTgwL0yRldA&\nscope=openid%20email%20profile&code_verifier=vfPr9~ZNJ1msSAaMdC-xvymeXoAYJ.6QWRTw~.0-79UXRE11kOqfcegLLXzmpJ6-GO1RtVCD91_GdyvGgmiSWw9LnhX7__PtjHfwE2Kjasit0se_~h0Om-hpiwzgoL\n")),(0,l.kt)("p",null,"  The response contains the access and id tokens"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "access_token": "ya29.a0AfB_byA6ryWtal5OpY....mDLi_QZeBBQ8-anlgA0165",\n  "expires_in": 3597,\n  "scope": "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile openid",\n  "token_type": "Bearer",\n  "id_token": "eyJhbGciOiJSUzI1NiIsImt....wlZltc2dpTuSMvnvFgGURbgUTWg"\n}\n')),(0,l.kt)("p",null,"  The JWT token is stored in the local storage because ",(0,l.kt)("code",null,"settings.ts")," contains the following configuration: ",(0,l.kt)("b",null,"idp.google.persist: 'localStorage'")," (Defaults to: stored only in the global state)"),(0,l.kt)(u.J5,{values:[{label:"GoogleLoginPage.tsx",path:"auth/login/GoogleLoginPage.tsx"},{label:"LoginCallbackPage.tsx",path:"auth/login/google/LoginCallbackPage.tsx"},{label:"settings.ts",path:"settings.ts"},{label:"Backend API",path:"https://github.com/brunofranki/onekijs-example-backend/blob/master/app/utils/token.ts"}],preview:{path:"auth"},mdxType:"ExampleMultipleSnippet"})),(0,l.kt)(s.Z,{summary:(0,l.kt)("summary",null,"Logout (external logout with callback)"),mdxType:"Details"},(0,l.kt)(u.J5,{values:[{label:"Logout",path:"auth/LogoutPage.tsx"},{label:"Logout Callback",path:"auth/logout/CallbackPage.tsx"},{label:"Settings",path:"settings.ts"}],preview:{path:"auth"},mdxType:"ExampleMultipleSnippet"})),(0,l.kt)(o.Z,{defaultValue:"login",values:[{label:"Login",value:"login"},{label:"Login Callback",value:"loginCallback"},{label:"Logout",value:"logout"},{label:"Logout Callback",value:"logoutCallback"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"login",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'import React from "react";\nimport { useLoginService } from "onekijs";\n\nexport default React.memo(() => {\n  const idpName = \'google\';\n  const options = {};\n  const [error] = useLoginService(idpName, options);\n  if (error) {\n    return <div>{error.payload.message} <span onClick={() => error.remove()}>X</span></div>\n  }\n  return null;\n}\n')),(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("h4",{id:"inputs"},"Inputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// [Optional] the name of the IDP used for the login -- defaults to "default"\nidpName: string\n\n// [Optional] options object -- defaults to {}\noptions: {\n\n  // a callback function triggered when an error is thrown -- defaults to send error on topic "login-error"\n  onError: func\n}\n')),(0,l.kt)("h4",{id:"outputs"},"Outputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"error: {\n  payload: {\n    // description of the error\n    message: string,\n\n    // code of the error\n    code: string,\n  }\n  \n  // remove the error\n  remove: func\n}\n"))),(0,l.kt)(i.Z,{value:"loginCallback",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'import React from "react";\nimport { useLoginCallbackService } from "onekijs";\n\nexport default React.memo(() => {\n  const idpName = \'google\';\n  const options = {};\n  const [error] = useLoginCallbackService(idpName,options);\n  if (error) {\n    return <div>{error.payload.message} <span onClick={() => error.remove()}>X</span></div>\n  }\n  return null;\n}\n')),(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"parameters-1"},"Parameters"),(0,l.kt)("h4",{id:"inputs-1"},"Inputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// [Optional] the name of the IDP used for the login -- defaults to "default"\nidpName: string\n\n// [Optional] options object -- defaults to {}\noptions: {\n  // a callback function triggered when an the login is successfull -- The default redirects the user from the calling page\n  onSuccess: func\n  // a callback function triggered when an error is thrown -- defaults to send error on topic "login-error"\n  onError: func\n}\n')),(0,l.kt)("h4",{id:"outputs-1"},"Outputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"error: {\n  payload: {\n    // description of the error\n    message: string,\n\n    // code of the error\n    code: string,\n  }\n  \n  // remove the error\n  remove: func\n}\n"))),(0,l.kt)(i.Z,{value:"logout",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'import React from "react";\nimport { useLogoutService } from "onekijs";\n\nexport default React.memo(() => {\n  const options = {};\n  const [error] = useLogoutService(options);\n  if (error) {\n    return <div>{error.payload.message} <span onClick={() => error.remove()}>X</span></div>\n  }\n  return null;\n}\n')),(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"parameters-2"},"Parameters"),(0,l.kt)("h4",{id:"inputs-2"},"Inputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// [Optional] options object -- defaults to {}\noptions: {\n  // a callback function triggered when an error is thrown -- defaults to send error on topic "logout-error"\n  onError: func\n}\n')),(0,l.kt)("h4",{id:"outputs-2"},"Outputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"error: {\n  payload: {\n    // description of the error\n    message: string,\n\n    // code of the error\n    code: string,\n  }\n  \n  // remove the error\n  remove: func\n}\n"))),(0,l.kt)(i.Z,{value:"logoutCallback",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'import React from "react";\nimport { useLoginCallbackService } from "onekijs";\n\nexport default React.memo(() => {\n  const options = {};\n  const [error] = useLogoutCallbackService(options);\n  if (error) {\n    return <div>{error.payload.message} <span onClick={() => error.remove()}>X</span></div>\n  }\n  return null;\n}\n')),(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"parameters-3"},"Parameters"),(0,l.kt)("h4",{id:"inputs-3"},"Inputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// [Optional] options object -- defaults to {}\noptions: {\n  // a callback function triggered when an the logout is successfull -- The default redirects the user to the home page\n  onSuccess: func\n  // a callback function triggered when an error is thrown -- defaults to send error on topic "logout-error"\n  onError: func\n}\n')),(0,l.kt)("h4",{id:"outputs-3"},"Outputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"error: {\n  payload: {\n    // description of the error\n    message: string,\n\n    // code of the error\n    code: string,\n  }\n  \n  // remove the error\n  remove: func\n}\n")))),(0,l.kt)("h2",{id:"configuration"},"Configuration"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"useLoginService")),", ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"useLoginCallbackService")),", ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"useLogoutService")),", ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"useLogoutCallbackService"))," are fully configured in settings.js",(0,l.kt)("br",null),"\nThe configuration ",(0,l.kt)("strong",{parentName:"p"},"must"),' be defined under the key "',(0,l.kt)("strong",{parentName:"p"},"idp/:idpName"),'". For example, if ',(0,l.kt)("strong",{parentName:"p"},"idpName"),"=",(0,l.kt)("em",{parentName:"p"},"google"),", the config must look like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'const settings = {\n  idp: {\n    google: {\n      type: "oidc_server",\n      ...\n    }\n  }\n}\n')),(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"mandatory-attributes"},"Mandatory attributes"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"authorizeEndpoint")),(0,l.kt)("td",{parentName:"tr",align:null},"string ","|",(0,l.kt)("br",null),"function(context)"),(0,l.kt)("td",{parentName:"tr",align:null},"Can be",(0,l.kt)("ul",null,(0,l.kt)("li",null,"a string (relative or absolute URL)"),(0,l.kt)("li",null,"or a function returning the URL")),"if it's a relative URL, it's prefixed by the server.baseUrl from settings.js")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"clientId")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"the ",(0,l.kt)("em",{parentName:"td"},"client_id")," created on the IDP (identity provider)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"logoutEndpoint")),(0,l.kt)("td",{parentName:"tr",align:null},"string ","|",(0,l.kt)("br",null),"function(context)"),(0,l.kt)("td",{parentName:"tr",align:null},"Can be",(0,l.kt)("ul",null,(0,l.kt)("li",null,"A relative or absolute URL"),(0,l.kt)("li",null,"A function returning the URL")),"if it's a relative URL, it's prefixed by the server.baseUrl from settings.js")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"tokenEndpoint")),(0,l.kt)("td",{parentName:"tr",align:null},"string ","|",(0,l.kt)("br",null),"function(grant_type, context)"),(0,l.kt)("td",{parentName:"tr",align:null},"Can be",(0,l.kt)("ul",null,(0,l.kt)("li",null,"a relative or absolute URL"),(0,l.kt)("li",null,'A function that does an AJAX POST request to the token endpoint and returns a object of type "Token"')),"if it's a relative URL, it's prefixed by the server.baseUrl from settings.js")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},'must be "',(0,l.kt)("strong",{parentName:"td"},"oidc_server"),'"')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"userinfoEndpoint")),(0,l.kt)("td",{parentName:"tr",align:null},"string ","|",(0,l.kt)("br",null)," function (context)"),(0,l.kt)("td",{parentName:"tr",align:null},"Can be:",(0,l.kt)("ul",null,(0,l.kt)("li",null,"A relative or absolute URL"),(0,l.kt)("li",null,"A function that returns an object that represents the userInfo. For example a object like this: {email: '",(0,l.kt)("a",{parentName:"td",href:"mailto:foo@example.com"},"foo@example.com"),"', roles: ","['ADMIN']","}}")),"if it's a relative URL, it's prefixed by the server.baseUrl from settings.js")))),(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"optional-attributes"},"Optional attributes"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"callback")),(0,l.kt)("td",{parentName:"tr",align:null},"function(response, context): ","[token,userInfo]"),(0,l.kt)("td",{parentName:"tr",align:null},"Callback called at the end of the authentication for extracting the token and the userInfo from the response. ",(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"Inputs"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"response: the response from the authentication server"),(0,l.kt)("li",null,"context: an object containing the configuration of the IDP used, the redux store, the router, the settings and i18n infos")),(0,l.kt)("strong",{parentName:"td"},"Outputs"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"token: the oauth2 token"),(0,l.kt)("li",null,"userInfo: the securityContext of the user"))),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"codeChallengeMethod")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Method that was used to derive an authorization code challenge"),(0,l.kt)("td",{parentName:"tr",align:null},"S256")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"jwksEndpoint")),(0,l.kt)("td",{parentName:"tr",align:null},"string ","|",(0,l.kt)("br",null),"function(token, context)"),(0,l.kt)("td",{parentName:"tr",align:null},"jwksEndpoint is ",(0,l.kt)("strong",{parentName:"td"},"mandatory")," if ",(0,l.kt)("em",{parentName:"td"},"validate")," = true.",(0,l.kt)("br",null),(0,l.kt)("br",null),"Can be",(0,l.kt)("ul",null,(0,l.kt)("li",null,"A relative or absolute URL"),(0,l.kt)("li",null,"A function that returns a public key")),"if it's a relative URL, it's prefixed by the server.baseUrl from settings.js"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"loginCallbackRoute")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"a relative or absolute URL called by the OIDC server after a successfull login."),(0,l.kt)("td",{parentName:"tr",align:null},"[loginRoute]","/callback")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"logoutCallbackRoute")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"a relative or absolute URL called by the OIDC server after a successfull logout. Should be used to remove the cookie on the server side"),(0,l.kt)("td",{parentName:"tr",align:null},"[logoutRoute]","/callback")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"pkce")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"flag to indicate if the PKCE extension is applied. Recommended"),(0,l.kt)("td",{parentName:"tr",align:null},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"nonce")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"flag to indicate if the nonce in the id_token is validated on the client side. Should be done on the server side"),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"postLoginRedirectKey")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"When calling the ",(0,l.kt)("em",{parentName:"td"},"authorize")," endpoint, ",(0,l.kt)("em",{parentName:"td"},"postLoginRedirectKey")," represents the name of the parameter to indicate the redirect URI"),(0,l.kt)("td",{parentName:"tr",align:null},"redirect_uri")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"postLogoutRedirectKey")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"When calling the ",(0,l.kt)("em",{parentName:"td"},"logout")," endpoint, ",(0,l.kt)("em",{parentName:"td"},"postLoginRedirectKey")," represents the name of the parameter to indicate the redirect URI"),(0,l.kt)("td",{parentName:"tr",align:null},"post_logout_redirect_uri")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"responseType")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"only ",(0,l.kt)("em",{parentName:"td"},"code")," is supported right now"),(0,l.kt)("td",{parentName:"tr",align:null},"code")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"scope")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},'the value of the parameter "scope" sent to the ',(0,l.kt)("em",{parentName:"td"},"authorize")," endpoint. Should generally be redefined"),(0,l.kt)("td",{parentName:"tr",align:null},"openid")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"state")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"flag to indicate if the javascript client send a state to the IDP. Recommended for mitigating attacks"),(0,l.kt)("td",{parentName:"tr",align:null},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"validate")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"flag to indicate if the id_token and the access_token are validated. Should generally be done on the server side"),(0,l.kt)("td",{parentName:"tr",align:null},"false")))),(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"configuration-example"},"Configuration example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const settings = {\n  idp: {\n    google: {\n      type: 'oidc_server', \n      clientId: '1eb5cq6p7d8dm8g4q9jk6qdve5', // id given by Google              \n      authorizeEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth', // URL given by Google. Will be called by the client\n      tokenEndpoint: '/api/oauth2/token',   // URL of a service exposed by your server that exchanges the authorization code for an access token by calling the Google /token endpoint\n      userinfoEndpoint: '/api/oauth2/userinfo', // URL of a service exposed by your server that returns the details about the logged-in user\n      logoutEndpoint: '/api/oauth2/logout', // URL exposed by your server which call the IDP logout URL and then removes the cookie\n      scope: 'openid email profile', // ask to Google the profile and the email of the user\n    }\n  }\n}\n")))}f.isMDXComponent=!0}}]);